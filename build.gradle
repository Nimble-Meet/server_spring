buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.nimble'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    // querydsl JPAAnnotationProcessor
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // springdoc (for swagger)
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0")

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    //sockjs
    implementation 'org.webjars:sockjs-client:1.5.1'
    //stomp
    implementation 'org.webjars:stomp-websocket:2.3.4'
    //gson
    implementation 'com.google.code.gson:gson:2.9.0'

    // bcrypt
    implementation 'org.mindrot:jbcrypt:0.3m'

    // jwt token
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // configuration processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    developmentOnly "org.springframework.boot:spring-boot-devtools"
}

tasks.named('test') {
    useJUnitPlatform()
}
